services:

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - redis-net

  mongo:
    image: mongo:6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example}
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
    networks:
      - mongo-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/easylogs --quiet
      interval: 10s
      timeout: 10s
      retries: 3

  easylogs:
    image: cr0hn/easylogs
    restart: always
    environment:
      MONGO_DB: ${MONGO_DB:-easylogs}
      MONGO_URI: ${MONGO_URI:-mongodb://root:example@mongo:27017}
      RECEIVE_LOGS_KEY: ${RECEIVE_LOGS_KEY:-LIh982y87GgljahsadfklJHLIUG87g1u1e7f6eb2ee145571858e8e24}
      REDIS_URI: ${REDIS_URI:-redis://redis:6379}
      ADMIN_USER: ${ADMIN_USER:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-adminadmin}
    ports:
      - '8080:8080'
    networks:
      - mongo-net
      - redis-net
    depends_on:
      - mongo
    healthcheck:
      test: curl --fail http://localhost:8080/health-check || exit 1
      interval: 60s
      retries: 5
      start_period: 10s
      timeout: 10s

volumes:
  mongo-data:
  redis-data:

networks:
  mongo-net:
  redis-net:
